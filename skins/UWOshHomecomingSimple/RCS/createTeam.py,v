head	1.3;
access;
symbols;
locks; strict;
comment	@# @;


1.3
date	2007.09.18.17.21.17;	author Kimtheman;	state Exp;
branches;
next	1.2;

1.2
date	2007.09.13.20.46.44;	author Kimtheman;	state Exp;
branches;
next	1.1;

1.1
date	2007.09.13.19.20.04;	author Kimtheman;	state Exp;
branches;
next	;


desc
@@


1.3
log
@If Plone 2.1, uses the /object_delete URL on Cancel, else uses the /delete_confirmation URL.
@
text
@from Products.PythonScripts.standard import url_quote, urlencode

portal=context.portal_url.getPortalObject()
pm=portal.portal_membership
myFolder=pm.getHomeFolder()

if not myFolder:
    kw = {
        'portal_status_message' : "You must be logged in to create a Homecoming team.",
        'came_from' : context.absolute_url() + "/createTeam",
        }
    context.REQUEST.RESPONSE.redirect(portal.absolute_url() + "/login_form?" + urlencode (kw))
else:
    new_id = myFolder.generateUniqueId('HomecomingTeam')
    newTeam = myFolder.invokeFactory('HomecomingTeam', new_id)
    newTeamURL = myFolder.absolute_url() + '/' + newTeam
    redirect_to = newTeamURL + '/edit'
    portal_status_message="A new team has been created.  You must give it a name and fill out the names and email addresses of its members. Please make sure you enter correct email addresses."

    ploneVersion = portal.portal_migration.getInstanceVersionTuple()
    #portal_status_message +=  " (Plone version is %s)" % str(ploneVersion)
    if ploneVersion[0] == 2 and ploneVersion[1] == 1:
      last_referer = newTeamURL + '/object_delete'
    else:    
      last_referer = newTeamURL + '/delete_confirmation'

    kw = {
        'portal_status_message' : portal_status_message, 
        'last_referer':last_referer,
        }
    context.REQUEST.RESPONSE.redirect(redirect_to + "?" + urlencode(kw))
@


1.2
log
@Added check that user is logged in.  If not, sends to login_form.
@
text
@a0 9
## Script (Python) "createTeam_old"
##bind container=container
##bind context=context
##bind namespace=
##bind script=script
##bind subpath=traverse_subpath
##parameters=
##title=
##
d19 7
a25 2
    
    last_referer = newTeamURL + '/object_delete'
@


1.1
log
@Initial revision
@
text
@d16 14
a29 5
new_id = myFolder.generateUniqueId('HomecomingTeam')
newTeam = myFolder.invokeFactory('HomecomingTeam', new_id)
newTeamURL = myFolder.absolute_url() + '/' + newTeam
redirect_to = newTeamURL + '/edit'
portal_status_message="A new team has been created.  You must give it a name and fill out the names and email addresses of its members. Please make sure you enter correct email addresses."
d31 5
a35 8
#last_referer = portal.absolute_url()
last_referer = newTeamURL + '/object_delete'

kw = {
  'portal_status_message' : portal_status_message, 
  'last_referer':last_referer,
}
context.REQUEST.RESPONSE.redirect(redirect_to + "?" + urlencode(kw))
@
